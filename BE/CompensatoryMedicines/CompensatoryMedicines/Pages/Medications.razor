@page "/medications"
@using CompensatoryMedicines.Services;
@using Microsoft.AspNetCore.Components.Web
@using Domain.Entities;
@using System.Text.Json;
@using System.Globalization;
@inject IMedicationService medicationService

<h1>Lista medicamentelor compensate</h1>

@if (medications == null)
{
    <Spinner />
}
else if (medications.Count == 0)
{
    <p>No medications found.</p>
}
else
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => Export("excel"))" class="mb-4 me-2" />
    <RadzenButton Text="Export CSV" Icon="wrap_text" Click="@(args => Export("csv"))" class="mb-4" />
    <RadzenDataGrid TItem="Medication"
                Data="@medications" 
        PageSize="7" 
        AllowFiltering="true"
        AllowPaging="true"
        AllowSorting="true"
        ShowPagingSummary="true"
        AllowColumnResize="true"
        
        FilterMode="FilterMode.Advanced"
        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        LogicalFilterOperator="LogicalFilterOperator.Or" 
        FilterPopupRenderMode="PopupRenderMode.OnDemand"
        AllowColumnPicking="true">

        <Columns>
            <RadzenDataGridColumn TItem="Medication" Property="DenumireComerciala" Title="Denumirea comerciala" Frozen="true" Width="80px" TextAlign="TextAlign.Center" Sortable="false" />
            <RadzenDataGridColumn TItem="Medication" Property="GrupaMaladiilor" Title="Grupa maladiilor" Frozen="true" />
            <RadzenDataGridColumn TItem="Medication" Property="Tara" Title="Tara" Frozen="true">
                <FooterTemplate>
                    Total tari: <b>@_uniqueTaraCount</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Medication" Property="FirmaProducatoare" Title="Firma" />
            <RadzenDataGridColumn TItem="Medication" Property="CodDCI" Title="Cod DCI" />
            <RadzenDataGridColumn TItem="Medication" Property="DenumireComunaInternationala" Title="Denumirea Comuna Internationala" />
            <RadzenDataGridColumn TItem="Medication" Property="Doza" Title="Doza" />
            <RadzenDataGridColumn TItem="Medication" Property="CodDC" Title="Cod DC" />
            <RadzenDataGridColumn TItem="Medication" Property="SumaFixaCompensataCuTVA" Title="Suma compensata per unitate de masura cu TVA" />
            <RadzenDataGridColumn TItem="Medication" Property="SumaFixaCompensataFaraTVA" Title="Suma compensata per unitate de masura fara TVA" />
            <RadzenDataGridColumn TItem="Medication" Property="FormaFarmaceutica" Title="Forma farmaceutica" />
            <RadzenDataGridColumn TItem="Medication" Property="Divizarea" Title="Divizarea" />
            <RadzenDataGridColumn TItem="Medication" Property="NumarInregistrare" Title="Nr de inregistrare" />
            <RadzenDataGridColumn TItem="Medication" Property="DataInregistrare" Title="Data inregistrarii" />
            <RadzenDataGridColumn TItem="Medication" Property="CodATC" Title="Cod ATC" />
            <RadzenDataGridColumn TItem="Medication" Property="CodMedicament" Title="Cod medicament" />
            <RadzenDataGridColumn TItem="Medication" Property="DataAprobarePret" Title="Data aprobare pret" />
        </Columns>
    </RadzenDataGrid>
}

@code {
    private List<Medication> medications;
    private int _uniqueTaraCount;

    protected override async Task OnInitializedAsync()
    {
        medications = await medicationService.GetMedicationsAsync();
        _uniqueTaraCount = medications.Select(m => m.Tara).Distinct().ToHashSet().Count;
    }

    
}